{{/*apiVersion: v1*/}}
{{/*kind: Namespace*/}}
{{/*metadata:*/}}
{{/*  name: "ceph"*/}}
{{/*  labels:*/}}
{{/*    app.kubernetes.io/name: {{ .Chart.Name | quote }}*/}}
{{/*    app.kubernetes.io/instance: {{ .Release.Name | quote }}*/}}
{{/*    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}*/}}
{{/*    helm.sh/chart: {{ printf "%s-%s" .Chart.Name .Chart.Version | quote }}*/}}
{{/*  annotations:*/}}
{{/*    field.cattle.io/projectId: {{ .Values.rancher.project | quote }}*/}}
{{/*---*/}}
# This hook depends on helm creating the target namespace if it doesn't exist
# before the hook is called. This is the case on Helm v2.9.1
{{ $labels := include "ltutil.labels" . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "label-ns-%s" .Release.Name }}
  namespace: kube-system
  labels:
{{ $labels | indent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-succeeded, before-hook-creation
spec:
  template:
    spec:
      restartPolicy: Never
      # use tiller service account since it should have permissions to do namespace labeling
      serviceAccountName: tiller
      containers:
        - name: labeler
          image: gcr.io/google_containers/hyperkube:v1.14.6
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              kubectl annotate namespace {{ .Release.Namespace }} \
              "app.kubernetes.io/name={{ .Chart.Name }}" \
              "app.kubernetes.io/instance={{ .Release.Name }}" \
              "app.kubernetes.io/managed-by={{ .Release.Service }}" \
              "helm.sh/chart={{ printf "%s-%s" .Chart.Name .Chart.Version }}" \
              --overwrite
        - name: annotator
          image: gcr.io/google_containers/hyperkube:v1.14.6
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              kubectl annotate namespace {{ .Release.Namespace }} \
              "field.cattle.io/projectId={{ .Values.rancher.project }}" \
              --overwrite
